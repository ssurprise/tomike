package com.skx.tomike.cannon


const val ROUTER_FIRST_LEVEL_JETPACK = "/jetpack"
const val ROUTER_FIRST_LEVEL_third = "/third"
const val ROUTER_FIRST_LEVEL_FUNCTION = "/function"
const val ROUTER_FIRST_LEVEL_OTHER = "/other"


const val ROUTE_PATH_LIFECYCLE = "${ROUTER_FIRST_LEVEL_JETPACK}/lifecycle"
const val ROUTE_PATH_LIVEDATA = "${ROUTER_FIRST_LEVEL_JETPACK}/livedata"
const val ROUTE_PATH_VIEW_MODEL = "${ROUTER_FIRST_LEVEL_JETPACK}/viewmodel"
const val ROUTE_PATH_ROOM = "${ROUTER_FIRST_LEVEL_JETPACK}/room"
const val ROUTE_PATH_ACTIVITY4RESULT = "${ROUTER_FIRST_LEVEL_JETPACK}/activity4result"
const val ROUTE_PATH_RXJAVA = "${ROUTER_FIRST_LEVEL_third}/rxjava"
const val ROUTE_PATH_FLOW = "${ROUTER_FIRST_LEVEL_third}/flow"


const val ROUTE_PATH_OKHTTP = "${ROUTER_FIRST_LEVEL_third}/okhttp"
const val ROUTE_PATH_RETROFIT = "${ROUTER_FIRST_LEVEL_third}/retrofit"
const val ROUTE_PATH_GLIDE = "${ROUTER_FIRST_LEVEL_third}/glide"
const val ROUTE_PATH_HOTFIX = "${ROUTER_FIRST_LEVEL_third}/hotfix/tinker"
const val ROUTE_PATH_AOP = "${ROUTER_FIRST_LEVEL_third}/aop"
const val ROUTE_PATH_ZXING = "${ROUTER_FIRST_LEVEL_third}/zxing"


const val ROUTE_PATH_HANDLER = "${ROUTER_FIRST_LEVEL_FUNCTION}/handler"
const val ROUTE_PATH_DIALOG = "${ROUTER_FIRST_LEVEL_FUNCTION}/dialog"
const val ROUTE_PATH_POPWINDOW = "${ROUTER_FIRST_LEVEL_FUNCTION}/popwindow"
const val ROUTE_PATH_FULL_SCREEN = "${ROUTER_FIRST_LEVEL_FUNCTION}/fullScreen"
const val ROUTE_PATH_SERVICE = "${ROUTER_FIRST_LEVEL_FUNCTION}/service"
const val ROUTE_PATH_BROADCAST = "${ROUTER_FIRST_LEVEL_FUNCTION}/broadcast"
const val ROUTE_PATH_FRAGMENT = "${ROUTER_FIRST_LEVEL_FUNCTION}/fragment"
const val ROUTE_PATH_ASYNC_TASK = "${ROUTER_FIRST_LEVEL_FUNCTION}/asyncTask"
const val ROUTE_PATH_COUNT_DOWN_TIMER = "${ROUTER_FIRST_LEVEL_FUNCTION}/countDownTimer"
const val ROUTE_PATH_BIG_IMAGE_LOAD = "${ROUTER_FIRST_LEVEL_FUNCTION}/image/load"
const val ROUTE_PATH_IMAGE_zoom = "${ROUTER_FIRST_LEVEL_FUNCTION}/image/zoom"
const val ROUTE_PATH_PERMISSION = "${ROUTER_FIRST_LEVEL_FUNCTION}/permission"
const val ROUTE_PATH_KEYBOARD = "${ROUTER_FIRST_LEVEL_FUNCTION}/keyboard"
const val ROUTE_PATH_KEYBOARD_2 = "${ROUTER_FIRST_LEVEL_FUNCTION}/keyboard2"
const val ROUTE_PATH_DEVICE_INFO = "${ROUTER_FIRST_LEVEL_FUNCTION}/device/info"
const val ROUTE_PATH_SAF = "${ROUTER_FIRST_LEVEL_FUNCTION}/saf"
const val ROUTE_PATH_NFC_GROUP = "${ROUTER_FIRST_LEVEL_FUNCTION}/nfc/group"
const val ROUTE_PATH_NFC_PERMISSION = "${ROUTER_FIRST_LEVEL_FUNCTION}/nfc/permission"
const val ROUTE_PATH_NFC_READ = "${ROUTER_FIRST_LEVEL_FUNCTION}/nfc/read"
const val ROUTE_PATH_NFC_WRITE = "${ROUTER_FIRST_LEVEL_FUNCTION}/nfc/write"
const val ROUTE_PATH_PHOTO_ALBUM = "${ROUTER_FIRST_LEVEL_FUNCTION}/photo/album"
const val ROUTE_PATH_PHOTO_WALL = "${ROUTER_FIRST_LEVEL_FUNCTION}/photo/wall"
const val ROUTE_PATH_MUSIC_PLAYER = "${ROUTER_FIRST_LEVEL_FUNCTION}/music/player"
const val ROUTE_PATH_NOTIFICATION = "${ROUTER_FIRST_LEVEL_FUNCTION}/notification"
const val ROUTE_PATH_TRANSPARENT_THEME = "${ROUTER_FIRST_LEVEL_FUNCTION}/theme/transparent"
const val ROUTE_PATH_TRANSLUCENT_THEME = "${ROUTER_FIRST_LEVEL_FUNCTION}/theme/translucent"
const val ROUTE_PATH_PHOTO_PREVIEW = "${ROUTER_FIRST_LEVEL_FUNCTION}/photo/preview"
const val ROUTE_PATH_FILE_TREE_VISITOR = "${ROUTER_FIRST_LEVEL_FUNCTION}/file/scan"
const val ROUTE_PATH_APP_USAGE_STATS = "${ROUTER_FIRST_LEVEL_FUNCTION}/app/usageStats"

const val ROUTE_PATH_OUTER_START = "${ROUTER_FIRST_LEVEL_OTHER}/outerstart"
const val ROUTE_PATH_PARCELABLE = "${ROUTER_FIRST_LEVEL_OTHER}/parcelable"
const val ROUTE_PATH_REBOOT = "${ROUTER_FIRST_LEVEL_OTHER}/reboot"
